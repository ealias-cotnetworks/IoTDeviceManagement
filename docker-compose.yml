version: '3.3'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    container_name: kafka-zookeeper3
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-kafka:7.0.1
    container_name: kafka-broker3
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_GROUPID: 'mygroup'
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1


  # app:
  #   image: mysql:latest
  #   build:
  #     context: .
  #   container_name: some-mysql
  #   depends_on:
  #     - db
  #   environment:
  #     - SPRING_DATASOURCE_URL=jdbc:mysql://db:3306/IoTdevicemanagement
  #     - SPRING_DATASOURCE_USERNAME=mysql
  #     - SPRING_DATASOURCE_PASSWORD=root
  #     - SPRING_JPA_HIBERNATE_DDL_AUTO=update

  # db:
  #   image: mysql:latest
  #   container_name: pinkFlamingosContainer
  #   ports:
  #     - "3306:3306"
  #   environment:
  #     - MYSQL_ROOT_PASSWORD=mysql
  #     - MYSQL_DATABASE=pinkFlamingosDatabase
  #   volumes:
  #         - /Users/victoria.kruczek/Desktop/Projekty/pinkFlamingos/db:/var/lib/mysql
